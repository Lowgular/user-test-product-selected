"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.exactCaseInsensitiveRegexp = exports.mapToUnboundedRegexp = exports.allowMultipleSpaces = exports.coerceExactAndEscapeRegexp = exports.coerceRegexp = exports.escapeRegExp = exports.REGEXP_REPEAT = void 0;
exports.REGEXP_REPEAT = {
    ZERO_OR_ONE: () => '?',
    ZERO_OR_MORE: () => '*',
    ONE_OR_MORE: () => '+',
    FROM_TO: (from, to) => `{${from !== null && from !== void 0 ? from : ''},${to !== null && to !== void 0 ? to : ''}}`,
};
const escapeRegExp = (str) => {
    return str.replace(/[.*?+^${}()|[\]\\\/]/g, '\\$&'); // $& means the whole matched string
};
exports.escapeRegExp = escapeRegExp;
const coerceRegexp = (value, shouldStart = true, shouldEnd = true) => typeof value === 'string'
    ? new RegExp(`${shouldStart ? '^' : ''}\\s${exports.REGEXP_REPEAT.ZERO_OR_MORE()}${value}\\s${exports.REGEXP_REPEAT.ZERO_OR_MORE()}${shouldEnd ? '$' : ''}`)
    : value;
exports.coerceRegexp = coerceRegexp;
const coerceExactAndEscapeRegexp = (value) => typeof value === 'string' ? new RegExp(`${(0, exports.escapeRegExp)(value)}`) : value;
exports.coerceExactAndEscapeRegexp = coerceExactAndEscapeRegexp;
const allowMultipleSpaces = (value) => value.replace(/\s+/, `\\s${exports.REGEXP_REPEAT.ONE_OR_MORE()}`);
exports.allowMultipleSpaces = allowMultipleSpaces;
const mapToUnboundedRegexp = (value, caseSensitive = false) => new RegExp((0, exports.escapeRegExp)(value), `g${caseSensitive ? '' : 'i'}`);
exports.mapToUnboundedRegexp = mapToUnboundedRegexp;
const exactCaseInsensitiveRegexp = (pattern, mayStartWithSpace = false, mayEndWithSpace = false) => new RegExp(`^${mayStartWithSpace ? `\\s${exports.REGEXP_REPEAT.ZERO_OR_MORE()}` : ''}${pattern}$${mayEndWithSpace ? `\\s${exports.REGEXP_REPEAT.ZERO_OR_MORE()}` : ''}`, 'i');
exports.exactCaseInsensitiveRegexp = exactCaseInsensitiveRegexp;
//# sourceMappingURL=utils.js.map