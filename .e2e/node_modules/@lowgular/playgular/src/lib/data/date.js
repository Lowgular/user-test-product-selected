"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDayString = exports.isDateInThisMonth = exports.getNextMonthYear = exports.getThisYear = exports.getNextMonth = exports.getThisMonth = exports.dateInDays = exports.subtractMonths = exports.addMonths = exports.getYearMonthDayAsnumber = exports.dateFirstOfNextMonth = exports.dateLastOfMonth = exports.dateFirstOfMonth = exports.dateTomorrow = exports.dateToday = exports.getIsoDate = void 0;
const DAY_IN_MILISECONDS = 60 * 60 * 24 * 1000;
const getIsoDate = (date) => date.toISOString().split('T')[0];
exports.getIsoDate = getIsoDate;
const dateToday = () => {
    const today = new Date();
    // today.setHours(0, 0, 0, 0);
    return today;
};
exports.dateToday = dateToday;
const dateTomorrow = () => new Date(new Date().getTime() + 1 * DAY_IN_MILISECONDS);
exports.dateTomorrow = dateTomorrow;
const dateFirstOfMonth = (date) => {
    date.setDate(1);
    return new Date(date);
};
exports.dateFirstOfMonth = dateFirstOfMonth;
const dateLastOfMonth = (date) => new Date(date.getFullYear(), date.getMonth() + 1, 0);
exports.dateLastOfMonth = dateLastOfMonth;
const dateFirstOfNextMonth = () => {
    const date = (0, exports.dateToday)();
    date.setMonth(date.getMonth() + 1);
    date.setDate(1);
    return date;
};
exports.dateFirstOfNextMonth = dateFirstOfNextMonth;
const getYearMonthDayAsnumber = (date) => parseInt(`${date.getFullYear()}${date.getMonth().toString().padStart(2, '0')}${date
    .getDate()
    .toString()
    .padStart(2, '0')}`);
exports.getYearMonthDayAsnumber = getYearMonthDayAsnumber;
const addMonths = (date, months) => new Date(date.setMonth(date.getMonth() + months));
exports.addMonths = addMonths;
const subtractMonths = (date, months) => new Date(date.setMonth(date.getMonth() - months));
exports.subtractMonths = subtractMonths;
const dateInDays = (days) => new Date(new Date().getTime() + days * DAY_IN_MILISECONDS);
exports.dateInDays = dateInDays;
const getThisMonth = () => (0, exports.dateToday)().getMonth();
exports.getThisMonth = getThisMonth;
const getNextMonth = () => {
    const date = (0, exports.dateToday)();
    date.setMonth(date.getMonth() + 1);
    return date.getMonth();
};
exports.getNextMonth = getNextMonth;
const getThisYear = () => (0, exports.dateToday)().getFullYear();
exports.getThisYear = getThisYear;
const getNextMonthYear = () => {
    const date = (0, exports.dateToday)();
    date.setMonth(date.getMonth() + 1);
    return date.getFullYear();
};
exports.getNextMonthYear = getNextMonthYear;
const isDateInThisMonth = (date) => date.getMonth() === new Date().getMonth() &&
    date.getFullYear() === new Date().getFullYear();
exports.isDateInThisMonth = isDateInThisMonth;
const getDayString = (date) => date.getDate().toString();
exports.getDayString = getDayString;
//# sourceMappingURL=date.js.map